# Frontend Dockerfile for OCM Dashboard UI
FROM node:22-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY pnpm-lock.yaml ./

# Install dependencies
RUN npm install -g pnpm && pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Build frontend
RUN pnpm run build

# Production stage with golang and gin
FROM golang:1.24-alpine AS server

# Set working directory
WORKDIR /app

# Copy uiserver directory
COPY uiserver/ ./

# Download Go dependencies
RUN go mod download

# Build Go server
RUN go build -o uiserver uiserver.go

# Final stage
FROM alpine:latest

# Install ca-certificates for HTTPS requests
RUN apk --no-cache add ca-certificates

# Set working directory
WORKDIR /app

# Copy built assets from builder stage
COPY --from=builder /app/dist ./dist

# Copy Go server binary from server stage
COPY --from=server /app/uiserver ./

# Expose port 3000
EXPOSE 3000

# Start the Go server
CMD ["./uiserver"]