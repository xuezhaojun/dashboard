version: "3.8"

services:
  ocm-dashboard:
    build:
      context: .
      dockerfile: Dockerfile
    image: ocm-dashboard:latest
    container_name: ocm-dashboard
    ports:
      - "8080:8080"
    environment:
      # Production settings
      - GIN_MODE=release
      - DASHBOARD_BYPASS_AUTH=true # Set to false in production with proper auth
      - DASHBOARD_DEBUG=false
      - DASHBOARD_USE_MOCK=false
      - PORT=8080
    volumes:
      # Mount kubeconfig for accessing Kubernetes cluster
      - ~/.kube/config:/home/nonroot/.kube/config:ro
      # Optional: Mount additional config files
      # - ./config:/app/config:ro
    restart: unless-stopped
    networks:
      - ocm-network
    # Resource limits following CNCF best practices
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.25"
    # Health check using HTTP endpoint
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/api/clusters",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Security settings
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  # Development variant with mock data
  ocm-dashboard-dev:
    build:
      context: .
      dockerfile: Dockerfile
    image: ocm-dashboard:latest
    container_name: ocm-dashboard-dev
    ports:
      - "8081:8080"
    environment:
      # Development settings
      - GIN_MODE=debug
      - DASHBOARD_BYPASS_AUTH=true
      - DASHBOARD_DEBUG=true
      - DASHBOARD_USE_MOCK=true # Use mock data for development
      - PORT=8080
    restart: unless-stopped
    networks:
      - ocm-network
    profiles:
      - dev
    # Reduced resource limits for development
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.25"

networks:
  ocm-network:
    driver: bridge
